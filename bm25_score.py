# -*- coding: utf-8 -*-
"""bm25_score.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EDA125AMUBenFgWzU2h0jVAEy59-2QAg

Cette méthode permet de calculer le nombre de document oû ce terme apparait
"""

import os
def Occ_Terme_Dossier (corpus,terme):
  terme = terme.lower()
  terme = terme.strip ()
  terme = " " + terme + " "
  os.chdir(corpus)
  liste_fichiers = os.listdir(corpus)
  nb_doc_terme = 0
  for c in liste_fichiers :
    f = open (c,mode = "r")
    texte = f.readline()
    if mot in texte :
      nb_doc_terme =nb_doc_terme + 1
    f.close ()
  return nb_doc_terme

import math
def Calculer_IDF_T (corpus, terme):
  nb_doc = len (corpus)
  nb_doc_terme = Occ_Terme_Dossier (corpus, terme)
  return log (nb_doc - nb_doc_terme + 0.5)/(nb_doc_terme +0.5)

def calculer_TF (terme, document) :
  tf ={}
  longeur_doc = len (document)
  for mot, nb in terme.items () :
    tf[mot] = nb / float (longeur_doc)

  return tf

import math
def bm_25(terme, k1, b,docs,doc_courant):
  b = 0.75
  k1 = 1.2
  score = 0
  l =[]
  for doc in docs :
    long = len (doc)
    l.append(long)
  avgl = mean (l)

  f_t_d = calculer_TF (terme, doc_courant)
  Idf_t = Calculer_IDF_T (docs,terme)
  lg = len (doc_courant)
  score = score +( Idf_t * (f_t_d * (k1 + 1))/(f_t_d+ k1 * (1-b+b*(lg / avgl))))
  return score